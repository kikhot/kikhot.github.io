{"meta":{"version":1,"warehouse":"5.0.1"},"models":{"Asset":[{"_id":"themes\\butterfly\\source\\css\\index.styl","path":"css/index.styl","modified":1,"renderable":1},{"_id":"themes\\butterfly\\source\\css\\var.styl","path":"css/var.styl","modified":1,"renderable":1},{"_id":"themes\\butterfly\\source\\img\\404.jpg","path":"img/404.jpg","modified":1,"renderable":1},{"_id":"themes\\butterfly\\source\\img\\friend_404.gif","path":"img/friend_404.gif","modified":1,"renderable":1},{"_id":"themes\\butterfly\\source\\img\\favicon.png","path":"img/favicon.png","modified":1,"renderable":1},{"_id":"themes\\butterfly\\source\\js\\main.js","path":"js/main.js","modified":1,"renderable":1},{"_id":"themes\\butterfly\\source\\js\\tw_cn.js","path":"js/tw_cn.js","modified":1,"renderable":1},{"_id":"themes\\butterfly\\source\\js\\utils.js","path":"js/utils.js","modified":1,"renderable":1},{"_id":"themes\\butterfly\\source\\js\\search\\algolia.js","path":"js/search/algolia.js","modified":1,"renderable":1},{"_id":"themes\\butterfly\\source\\js\\search\\local-search.js","path":"js/search/local-search.js","modified":1,"renderable":1}],"Cache":[{"_id":"source\\_posts\\面试题-redis-缓存击穿.md","hash":"eb811c7317fdf0ddf5bd9fe3ae1a73d82131da79","modified":1718343948071},{"_id":"source\\_posts\\面试题_redis_缓存穿透.md","hash":"1c5892dbfe64a7b39d730a069de2555705350971","modified":1718343519250},{"_id":"source\\categories\\index.md","hash":"0c1dd2a22c709fcb348b7424928ea669f4efc197","modified":1718272214802},{"_id":"source\\tags\\index.md","hash":"57b588f1418e65b39e67da34a004d9fc7f37c775","modified":1718272245289},{"_id":"themes\\butterfly\\LICENSE","hash":"c8bc7df08db9dd3b39c2c2259a163a36cf2f6808","modified":1718087003387},{"_id":"themes\\butterfly\\README.md","hash":"20a91bea7f7ada8b8195d2abff106a7ce21bba20","modified":1718087003388},{"_id":"themes\\butterfly\\README_CN.md","hash":"9d729ee2ffc5e5f703ccfbfbbb7b286d59071125","modified":1718087003388},{"_id":"themes\\butterfly\\_config.butterfly.yml","hash":"c6fab3700a6502b5790ca20d20113020544ea048","modified":1718091951223},{"_id":"themes\\butterfly\\_config.yml","hash":"c6fab3700a6502b5790ca20d20113020544ea048","modified":1718087003388},{"_id":"themes\\butterfly\\package.json","hash":"2b6fb6f62b9fa6a829311ffd532ae760fbd0a7db","modified":1718087003449},{"_id":"themes\\butterfly\\plugins.yml","hash":"7bb2c7350c0c57850aa30213cd0f26553a614702","modified":1718087003450},{"_id":"themes\\butterfly\\.github\\FUNDING.yml","hash":"3b572099a992e30267f5fe4cd3c582ff7ac9f083","modified":1718087003384},{"_id":"themes\\butterfly\\languages\\default.yml","hash":"90e9e2f36dc51aa77eb7804ae048b4876035b12d","modified":1718087003390},{"_id":"themes\\butterfly\\languages\\en.yml","hash":"68127be0e6b44cfc5f31353d8b275c02939b3ff9","modified":1718087003391},{"_id":"themes\\butterfly\\languages\\zh-CN.yml","hash":"2dcc70a011b37890215ae0fd6d8f8c78aa8af6b0","modified":1718087003391},{"_id":"themes\\butterfly\\languages\\zh-TW.yml","hash":"1392e7b8c678cdfb54f55523693e66abc7d80538","modified":1718087003392},{"_id":"themes\\butterfly\\layout\\archive.pug","hash":"bc77220dfc269b8faad0930e1a4142ebf68165e5","modified":1718087003393},{"_id":"themes\\butterfly\\layout\\category.pug","hash":"bf979aec88d78b644fc5d31518f8679ad7625792","modified":1718087003393},{"_id":"themes\\butterfly\\layout\\index.pug","hash":"648dcbdb3d145a710de81c909e000e8664d2ac9c","modified":1718087003446},{"_id":"themes\\butterfly\\layout\\page.pug","hash":"bf2d6c6d2d156777b55292e51be02b0b3acf0af8","modified":1718087003447},{"_id":"themes\\butterfly\\layout\\tag.pug","hash":"4bb5efc6dabdf1626685bf6771aaa1467155ae86","modified":1718087003449},{"_id":"themes\\butterfly\\layout\\post.pug","hash":"fdbb508b5e6dec30fb8753c5a7fdd494410c4fc0","modified":1718087003448},{"_id":"themes\\butterfly\\.github\\ISSUE_TEMPLATE\\bug_report.yml","hash":"eed9190301095b35081aa2658204cc3f15b9f5e1","modified":1718087003385},{"_id":"themes\\butterfly\\.github\\ISSUE_TEMPLATE\\config.yml","hash":"63ad2249ad09fb3fe21bd5ff9adefb304a7ab24a","modified":1718087003385},{"_id":"themes\\butterfly\\.github\\ISSUE_TEMPLATE\\feature_request.yml","hash":"6e0f9470b18bd37d4891282ac73d61676b040e8c","modified":1718087003386},{"_id":"themes\\butterfly\\.github\\workflows\\stale.yml","hash":"4040c76547e270aaf184e9b219a44ca41bbb1b9f","modified":1718087003386},{"_id":"themes\\butterfly\\.github\\workflows\\publish.yml","hash":"e320b40c051bae1549156cd5ea4a51383cf78598","modified":1718087003386},{"_id":"themes\\butterfly\\layout\\includes\\404.pug","hash":"aace9ddff469de4226e47a52ede1c81e66d66d5c","modified":1718087003394},{"_id":"themes\\butterfly\\layout\\includes\\additional-js.pug","hash":"50eea5aa78cdeb6c72dd22f0aeabc407cc0f712e","modified":1718087003394},{"_id":"themes\\butterfly\\layout\\includes\\footer.pug","hash":"8715948b93e7508b84d913be1969b28c6b067b9b","modified":1718087003395},{"_id":"themes\\butterfly\\layout\\includes\\head.pug","hash":"ea8d4e8ac6af93cd268ba8f6ffcb80417bc2501e","modified":1718087003396},{"_id":"themes\\butterfly\\layout\\includes\\layout.pug","hash":"96df62e34661d8ca4a45267286127479e5178a79","modified":1718087003403},{"_id":"themes\\butterfly\\layout\\includes\\pagination.pug","hash":"c5c58714fb3cb839653e5c32e6094784c8662935","modified":1718087003408},{"_id":"themes\\butterfly\\layout\\includes\\rightside.pug","hash":"f448bf73103b88de4443e52d600e871cf3de3e32","modified":1718087003410},{"_id":"themes\\butterfly\\layout\\includes\\sidebar.pug","hash":"9277fead4c29dbe93976f078adaa26e8f9253da3","modified":1718087003411},{"_id":"themes\\butterfly\\scripts\\events\\404.js","hash":"f1d1c378356b776e9b2a8411e6dca88dc8c3245c","modified":1718087003451},{"_id":"themes\\butterfly\\scripts\\events\\cdn.js","hash":"7864ba45716c51aef8d8b04fd4bc212e0008ce3b","modified":1718087003452},{"_id":"themes\\butterfly\\scripts\\events\\comment.js","hash":"95479790234c291b064d031577d71214cdd1d820","modified":1718087003452},{"_id":"themes\\butterfly\\scripts\\events\\init.js","hash":"ce68e84a9ccfcf91100befbaa9afc392a0cd93bb","modified":1718087003452},{"_id":"themes\\butterfly\\scripts\\events\\merge_config.js","hash":"b1dfc3c898b886eab1241b068fc27d7a26a3b7d2","modified":1718087003453},{"_id":"themes\\butterfly\\scripts\\events\\stylus.js","hash":"0a336dfe5ed08952fa0df1532421df38a74a20d6","modified":1718087003454},{"_id":"themes\\butterfly\\scripts\\events\\welcome.js","hash":"f59e10305fef59ea3e62a7395106c0927582879d","modified":1718087003454},{"_id":"themes\\butterfly\\scripts\\filters\\post_lazyload.js","hash":"5ed2d7ef240c927fe1b7a7fb5bf9e55e2bfd55a5","modified":1718087003455},{"_id":"themes\\butterfly\\scripts\\filters\\random_cover.js","hash":"0df22d7dbfa766a65cb6032a1f003348f4307cfe","modified":1718087003456},{"_id":"themes\\butterfly\\scripts\\helpers\\aside_archives.js","hash":"4f712b4ea383b59a3122683db1d54c04a79ccc5d","modified":1718087003457},{"_id":"themes\\butterfly\\scripts\\helpers\\aside_categories.js","hash":"cdd992c8577d583c237b6aac9f5077d8200879b2","modified":1718087003457},{"_id":"themes\\butterfly\\scripts\\helpers\\findArchiveLength.js","hash":"b12895e0765d596494e5526d121de0dd5a7c23d3","modified":1718087003458},{"_id":"themes\\butterfly\\scripts\\helpers\\inject_head_js.js","hash":"b55f71347d2ead097c7f98c0ec792b091433345c","modified":1718087003458},{"_id":"themes\\butterfly\\scripts\\helpers\\page.js","hash":"c74d6a9b8f71e69447f7847a5f5e81555d68b140","modified":1718087003459},{"_id":"themes\\butterfly\\scripts\\helpers\\related_post.js","hash":"76343ac8422c9c8539082e77eda6ffee4b877eb2","modified":1718087003460},{"_id":"themes\\butterfly\\scripts\\helpers\\series.js","hash":"17c0095bc8d612a268cdcab000b1742dc4c6f811","modified":1718087003460},{"_id":"themes\\butterfly\\scripts\\tag\\button.js","hash":"164d5f1c2d1b4cb5a813a6fc574016743a53c019","modified":1718087003461},{"_id":"themes\\butterfly\\scripts\\tag\\flink.js","hash":"3ba7677969ff01fab06fc6713455ddc6861f0024","modified":1718087003461},{"_id":"themes\\butterfly\\scripts\\tag\\gallery.js","hash":"7ec77b3093f5de67e7032f40a5b12f1389f6f6ff","modified":1718087003462},{"_id":"themes\\butterfly\\scripts\\tag\\hide.js","hash":"5d08c3552f7d3c80a724ca628bff66321abe2e5a","modified":1718087003462},{"_id":"themes\\butterfly\\scripts\\tag\\inlineImg.js","hash":"c863d2732ce4bdc084f2d0db92f50f80328c1007","modified":1718087003462},{"_id":"themes\\butterfly\\scripts\\tag\\label.js","hash":"b013dc0a3d57d2caa18b89263f23871da9ec456d","modified":1718087003463},{"_id":"themes\\butterfly\\scripts\\tag\\mermaid.js","hash":"289f85847c58f0b2b7d98a68e370a2896edb8949","modified":1718087003464},{"_id":"themes\\butterfly\\scripts\\tag\\note.js","hash":"e68d8d21f3a86e3646907a3685550ee20e8d4a9f","modified":1718087003464},{"_id":"themes\\butterfly\\scripts\\tag\\score.js","hash":"35d54adc92e717cc32e13515122b025fd1a98ea2","modified":1718087003464},{"_id":"themes\\butterfly\\scripts\\tag\\series.js","hash":"dc56e5182dd3813dc977c9bf8556dcc7615e467b","modified":1718087003465},{"_id":"themes\\butterfly\\scripts\\tag\\tabs.js","hash":"7c448886f230adb4f4a0208c88fff809abcb5637","modified":1718087003465},{"_id":"themes\\butterfly\\scripts\\tag\\timeline.js","hash":"e611074a5a7f489a8b04afac0a3f7f882ce26532","modified":1718087003465},{"_id":"themes\\butterfly\\source\\css\\index.styl","hash":"b13d96924a5534bff91d75566b196ac87b4fac22","modified":1718087003489},{"_id":"themes\\butterfly\\source\\css\\var.styl","hash":"950250f66faeb611a67540e0fa6cedbcf5a7a321","modified":1718087003490},{"_id":"themes\\butterfly\\source\\img\\404.jpg","hash":"fb4489bc1d30c93d28f7332158c1c6c1416148de","modified":1718087003491},{"_id":"themes\\butterfly\\source\\img\\friend_404.gif","hash":"8d2d0ebef70a8eb07329f57e645889b0e420fa48","modified":1718087003492},{"_id":"themes\\butterfly\\source\\img\\favicon.png","hash":"3cf89864b4f6c9b532522a4d260a2e887971c92d","modified":1718087003491},{"_id":"themes\\butterfly\\source\\js\\main.js","hash":"59cd756a94ecdf3ec7b18f50691a8a6305f7a65a","modified":1718087003493},{"_id":"themes\\butterfly\\source\\js\\tw_cn.js","hash":"d776c670e4076ad6049dbb64cdee7a734b51d37f","modified":1718087003495},{"_id":"themes\\butterfly\\source\\js\\utils.js","hash":"7b871fe0c4456660cff4c7b9cc4ed089adac2caf","modified":1718087003495},{"_id":"themes\\butterfly\\layout\\includes\\head\\Open_Graph.pug","hash":"c8dbdfe6145a0bc6f7691c9551be8169a2698f0a","modified":1718087003397},{"_id":"themes\\butterfly\\layout\\includes\\head\\analytics.pug","hash":"c7666a10448edd93f5ace37296051b7670495f1b","modified":1718087003397},{"_id":"themes\\butterfly\\layout\\includes\\head\\config.pug","hash":"39e1ca0a54eb5fd3688a78737417a1aaa50914c9","modified":1718087003398},{"_id":"themes\\butterfly\\layout\\includes\\head\\config_site.pug","hash":"bd5dd5452e28a4fe94c3241a758ec6f4fdb7a149","modified":1718087003398},{"_id":"themes\\butterfly\\layout\\includes\\head\\google_adsense.pug","hash":"f29123e603cbbcc6ce277d4e8f600ba67498077c","modified":1718087003398},{"_id":"themes\\butterfly\\layout\\includes\\head\\preconnect.pug","hash":"a7c929b90ae52b78b39b1728e3ab0e3db1cb7b9a","modified":1718087003399},{"_id":"themes\\butterfly\\layout\\includes\\head\\pwa.pug","hash":"6dc2c9b85df9ab4f5b554305339fd80a90a6cf43","modified":1718087003399},{"_id":"themes\\butterfly\\layout\\includes\\head\\site_verification.pug","hash":"5168caadc4cf541f5d6676a9c5e8ae47a948f9ad","modified":1718087003400},{"_id":"themes\\butterfly\\layout\\includes\\header\\index.pug","hash":"1bef867c799ba158c5417272fb137539951aa120","modified":1718087003400},{"_id":"themes\\butterfly\\layout\\includes\\header\\menu_item.pug","hash":"ca8bcd90ad9467819330bfe7c02b76322754bccf","modified":1718087003400},{"_id":"themes\\butterfly\\layout\\includes\\header\\nav.pug","hash":"962ee70a35e60a13c31eea47d16b9f98069fe417","modified":1718087003401},{"_id":"themes\\butterfly\\layout\\includes\\header\\post-info.pug","hash":"cc99b2dc5c6b1f74391b0da609853ebc11de9610","modified":1718087003401},{"_id":"themes\\butterfly\\layout\\includes\\header\\social.pug","hash":"7a641b5dd45b970e1dafd1433eb32ea149e55cf2","modified":1718087003402},{"_id":"themes\\butterfly\\layout\\includes\\loading\\fullpage-loading.pug","hash":"766baca6ddce49d1724a02312387b292ff2d0bdc","modified":1718087003404},{"_id":"themes\\butterfly\\layout\\includes\\loading\\index.pug","hash":"00ae419f527d8225a2dc03d4f977cec737248423","modified":1718087003405},{"_id":"themes\\butterfly\\layout\\includes\\loading\\pace.pug","hash":"a6fde4835d6460ce7baf792fd5e1977fad73db25","modified":1718087003405},{"_id":"themes\\butterfly\\layout\\includes\\mixins\\article-sort.pug","hash":"9155f01d4c644a2e19b2b13b2d3c6d5e34dd0abf","modified":1718087003406},{"_id":"themes\\butterfly\\layout\\includes\\mixins\\post-ui.pug","hash":"90eb453b14f6b5c25bfd8d28aa67783603a1411d","modified":1718087003407},{"_id":"themes\\butterfly\\layout\\includes\\page\\categories.pug","hash":"5276a8d2835e05bd535fedc9f593a0ce8c3e8437","modified":1718087003407},{"_id":"themes\\butterfly\\layout\\includes\\page\\default-page.pug","hash":"e9459f122af7b733398578f9f0f8ab3c5e12a217","modified":1718087003407},{"_id":"themes\\butterfly\\layout\\includes\\page\\tags.pug","hash":"12be059c536490af216a397e8f2a7abbf6d4610e","modified":1718087003408},{"_id":"themes\\butterfly\\layout\\includes\\page\\flink.pug","hash":"e37681bc9c169d4220f26ecda2b3d5c02b6b9a0f","modified":1718087003407},{"_id":"themes\\butterfly\\layout\\includes\\post\\post-copyright.pug","hash":"0abad416b1974a17e5be7817931d5fe799180170","modified":1718087003409},{"_id":"themes\\butterfly\\layout\\includes\\post\\reward.pug","hash":"912df10a053db3135968e92b6fd1a707ee94c968","modified":1718087003410},{"_id":"themes\\butterfly\\layout\\includes\\third-party\\aplayer.pug","hash":"e939344fd389aeb11864ee697d5fd9b036d8325f","modified":1718087003412},{"_id":"themes\\butterfly\\layout\\includes\\third-party\\pangu.pug","hash":"f0898509da70388b5c532f19e762756d74080200","modified":1718087003433},{"_id":"themes\\butterfly\\layout\\includes\\third-party\\effect.pug","hash":"43014bfc63583d3ee8808d526dd165848c0ed52f","modified":1718087003426},{"_id":"themes\\butterfly\\layout\\includes\\third-party\\pjax.pug","hash":"9b734d99963f3e7f562597dcf60485ccbf6e961c","modified":1718087003434},{"_id":"themes\\butterfly\\layout\\includes\\third-party\\prismjs.pug","hash":"08979afbfecb4476a5ae8e360947b92624d285b8","modified":1718087003434},{"_id":"themes\\butterfly\\layout\\includes\\third-party\\subtitle.pug","hash":"dfb5e16a7e7106bb20b2ac2d0df1251d0fc79609","modified":1718087003439},{"_id":"themes\\butterfly\\layout\\includes\\widget\\card_announcement.pug","hash":"21e019bdc3b1e796bb00976bb29af2d51f873624","modified":1718087003440},{"_id":"themes\\butterfly\\layout\\includes\\widget\\card_ad.pug","hash":"a8312b527493dabbadbb1280760168d3bc909a3b","modified":1718087003440},{"_id":"themes\\butterfly\\layout\\includes\\widget\\card_archives.pug","hash":"73d33b6930e7944187a4b3403daf25d27077a2dd","modified":1718087003440},{"_id":"themes\\butterfly\\layout\\includes\\widget\\card_author.pug","hash":"ab037bf5794638bd30da4cf7cf106e5d03b5f696","modified":1718087003441},{"_id":"themes\\butterfly\\layout\\includes\\widget\\card_bottom_self.pug","hash":"1dba77d250eeebfb6e293d504352c7e9ea31980b","modified":1718087003441},{"_id":"themes\\butterfly\\layout\\includes\\widget\\card_categories.pug","hash":"66e383b4ef374951eb87dd1bf4cdb7a667193fb5","modified":1718087003442},{"_id":"themes\\butterfly\\layout\\includes\\widget\\card_post_series.pug","hash":"e0bb72fa0ce15964b11b8fe421cae3432394e35f","modified":1718087003443},{"_id":"themes\\butterfly\\layout\\includes\\widget\\card_newest_comment.pug","hash":"8e22f53886a57a68286970d8af8b4c950fd4a1d7","modified":1718087003443},{"_id":"themes\\butterfly\\layout\\includes\\widget\\card_post_toc.pug","hash":"d48d77af1670bd568d784794408bf524a448bfcc","modified":1718087003443},{"_id":"themes\\butterfly\\layout\\includes\\widget\\card_recent_post.pug","hash":"bb842d2aa6469d65bf06af1372f0a19a9e4ef44c","modified":1718087003444},{"_id":"themes\\butterfly\\layout\\includes\\widget\\card_tags.pug","hash":"842b772a387b576550fa127030e1c2e9bf65716d","modified":1718087003445},{"_id":"themes\\butterfly\\layout\\includes\\widget\\card_webinfo.pug","hash":"12185713f9ca08984fc74e3b69d8cd6828d23da8","modified":1718087003446},{"_id":"themes\\butterfly\\layout\\includes\\widget\\card_top_self.pug","hash":"7b5ae404a1205546b7de4be42291315cf918f2b3","modified":1718087003445},{"_id":"themes\\butterfly\\layout\\includes\\widget\\index.pug","hash":"8df529f71e25f1c0a00e533de7944ed3d1ba7bd8","modified":1718087003446},{"_id":"themes\\butterfly\\source\\css\\_highlight\\highlight.styl","hash":"41054740cfbd1357138785464f6859681ca58493","modified":1718087003468},{"_id":"themes\\butterfly\\source\\css\\_highlight\\theme.styl","hash":"3c178608406c31d768af355ef1d7326da37cc75f","modified":1718087003471},{"_id":"themes\\butterfly\\source\\css\\_global\\function.styl","hash":"e920dae9ce00177922468db49240f5aca0af4f64","modified":1718087003467},{"_id":"themes\\butterfly\\source\\css\\_global\\index.styl","hash":"0421da07907b3d98df64239e073b23fbb3f04149","modified":1718087003467},{"_id":"themes\\butterfly\\source\\css\\_layout\\aside.styl","hash":"aae70ddd126b2e40158e45036abecbfa33cbfbba","modified":1718087003472},{"_id":"themes\\butterfly\\source\\css\\_layout\\chat.styl","hash":"792a04d36de32f230ca3256ad87a90fe8392f333","modified":1718087003472},{"_id":"themes\\butterfly\\source\\css\\_layout\\comments.styl","hash":"fbfce4d67cacd1df22fb73d89d008693f59d9d91","modified":1718087003472},{"_id":"themes\\butterfly\\source\\css\\_layout\\footer.styl","hash":"5e27f7842af82ff7498d4b59787ce9ca90fa9e6f","modified":1718087003472},{"_id":"themes\\butterfly\\source\\css\\_layout\\head.styl","hash":"964bda8acf4180a15c33e1d8447fc3140baa4c68","modified":1718087003473},{"_id":"themes\\butterfly\\source\\css\\_layout\\loading.styl","hash":"f0b01bbf321c2c24fdccaee367dd9fd448031a72","modified":1718087003474},{"_id":"themes\\butterfly\\source\\css\\_layout\\pagination.styl","hash":"bd099f7d3adef4b7edd24c0a25a07415b156e587","modified":1718087003474},{"_id":"themes\\butterfly\\source\\css\\_layout\\post.styl","hash":"7ae27854a737a02eca89b0b92db94cb298fef59e","modified":1718087003475},{"_id":"themes\\butterfly\\source\\css\\_layout\\relatedposts.styl","hash":"6dcf19c0933c8828a439f801b0f4b256447dec07","modified":1718087003476},{"_id":"themes\\butterfly\\source\\css\\_layout\\reward.styl","hash":"c0b11a1a5f52e3a6af4e312a8134c93eda18a7dd","modified":1718087003476},{"_id":"themes\\butterfly\\source\\css\\_layout\\rightside.styl","hash":"0322237e762db401d7b4aa33168d0b9334a9ec26","modified":1718087003476},{"_id":"themes\\butterfly\\source\\css\\_layout\\sidebar.styl","hash":"80ee9d0bfe5d38aac1f0cdcea5fc88b71d310041","modified":1718087003477},{"_id":"themes\\butterfly\\source\\css\\_layout\\third-party.styl","hash":"15ea7564b2e3bf46bc91fb6e49c94d057b37caaf","modified":1718087003477},{"_id":"themes\\butterfly\\source\\css\\_mode\\darkmode.styl","hash":"dbc855795a881f8c805bf5c9c5c4d5d542a648ec","modified":1718087003478},{"_id":"themes\\butterfly\\source\\css\\_mode\\readmode.styl","hash":"a22fd15048d21452f0015d0765d295d730203308","modified":1718087003478},{"_id":"themes\\butterfly\\source\\css\\_page\\404.styl","hash":"a7223a8fcc4fa7b81e552c9a2554be7df9de312e","modified":1718087003479},{"_id":"themes\\butterfly\\source\\css\\_page\\archives.styl","hash":"5dd1ba997741d02894ff846eda939ad8051c0bb2","modified":1718087003479},{"_id":"themes\\butterfly\\source\\css\\_page\\categories.styl","hash":"68bc8cbea25dbb3cdc170f09f9b43ce130547717","modified":1718087003479},{"_id":"themes\\butterfly\\source\\css\\_page\\common.styl","hash":"df7a51fcabbadab5aa31770e3202a47c9599bbb7","modified":1718087003479},{"_id":"themes\\butterfly\\source\\css\\_page\\flink.styl","hash":"ecc2b2e28c179eb9406fc2c6f00e141078249cdd","modified":1718087003480},{"_id":"themes\\butterfly\\source\\css\\_page\\homepage.styl","hash":"a977cd8161ef4d6ddd5293e81403519076657430","modified":1718087003480},{"_id":"themes\\butterfly\\source\\css\\_page\\tags.styl","hash":"9e35f91847773b915c74a78b8aa66c7bdb950ad0","modified":1718087003482},{"_id":"themes\\butterfly\\source\\css\\_search\\algolia.styl","hash":"37db99299af380e9111dce2a78a5049b301b13e0","modified":1718087003482},{"_id":"themes\\butterfly\\source\\css\\_search\\index.styl","hash":"0b23010154e19f37f0c4af0110f9f834d6d41a13","modified":1718087003482},{"_id":"themes\\butterfly\\source\\css\\_search\\local-search.styl","hash":"8a53d7ba5ca2f5eb4124b684e7845b648583f658","modified":1718087003482},{"_id":"themes\\butterfly\\source\\css\\_tags\\button.styl","hash":"62da1de0d5b8453fcecbfacddb16985265638ba5","modified":1718087003483},{"_id":"themes\\butterfly\\source\\css\\_tags\\gallery.styl","hash":"3e9355b76f87e2ee90f652855282b37ab5ae0b3e","modified":1718087003484},{"_id":"themes\\butterfly\\source\\css\\_tags\\hexo.styl","hash":"985b183db7b7bfd8f9bdb60494549fb7f850348b","modified":1718087003484},{"_id":"themes\\butterfly\\source\\css\\_tags\\hide.styl","hash":"b7cf7753479fcf2fe07287ffdb0e568adbba4c18","modified":1718087003485},{"_id":"themes\\butterfly\\source\\css\\_tags\\inlineImg.styl","hash":"5a873d01fabebcf7ddf7a6b1c2e2e5e2714097f4","modified":1718087003486},{"_id":"themes\\butterfly\\source\\css\\_tags\\label.styl","hash":"2f83bd145b870d80d4b18b0ac603235229a5694e","modified":1718087003486},{"_id":"themes\\butterfly\\source\\css\\_tags\\note.styl","hash":"4929382bd60788d34752a66e2fe764ef797a72a0","modified":1718087003487},{"_id":"themes\\butterfly\\source\\css\\_tags\\tabs.styl","hash":"353b95f9a6c2c1e777d978118cb61f909ccbf89c","modified":1718087003487},{"_id":"themes\\butterfly\\source\\css\\_tags\\timeline.styl","hash":"07ea7134db7a66c87658116f089fb1a2a6906563","modified":1718087003488},{"_id":"themes\\butterfly\\source\\css\\_third-party\\normalize.min.css","hash":"8549829fb7d3c21cd9e119884962e8c463a4a267","modified":1718087003489},{"_id":"themes\\butterfly\\source\\js\\search\\algolia.js","hash":"a7c2fe73cc05ad3525909b86ad0ede1a9f2d3b48","modified":1718087003494},{"_id":"themes\\butterfly\\source\\js\\search\\local-search.js","hash":"ab3904451ae1d78903424b8b2ef815c8571e1749","modified":1718087003494},{"_id":"themes\\butterfly\\layout\\includes\\third-party\\abcjs\\abcjs.pug","hash":"8f95aca305b56ccd7c8c7367b03d26db816ebd5f","modified":1718087003412},{"_id":"themes\\butterfly\\layout\\includes\\third-party\\abcjs\\index.pug","hash":"58f37823f6cd9a194fb50f7ca7c2233e49939034","modified":1718087003412},{"_id":"themes\\butterfly\\layout\\includes\\third-party\\card-post-count\\artalk.pug","hash":"b03ee8625149191f9d5d057bbc9824b68d8dd0c4","modified":1718087003412},{"_id":"themes\\butterfly\\layout\\includes\\third-party\\card-post-count\\disqus.pug","hash":"d6fff5a7f84c8b09f282f9ddc0020a68a8aac9ea","modified":1718087003412},{"_id":"themes\\butterfly\\layout\\includes\\third-party\\card-post-count\\fb.pug","hash":"4b98145d6584d586cabf033493282afc72ae816a","modified":1718087003413},{"_id":"themes\\butterfly\\layout\\includes\\third-party\\card-post-count\\index.pug","hash":"846cabae287ae31b3bbfac3da022475713dd5ecc","modified":1718087003413},{"_id":"themes\\butterfly\\layout\\includes\\third-party\\card-post-count\\remark42.pug","hash":"716dc463fe4ef5112e7018ed60804125fdfa5cad","modified":1718087003414},{"_id":"themes\\butterfly\\layout\\includes\\third-party\\card-post-count\\twikoo.pug","hash":"7e233f872aea6fd6beccdc9efd86b1bf9ec9f12d","modified":1718087003414},{"_id":"themes\\butterfly\\layout\\includes\\third-party\\card-post-count\\valine.pug","hash":"cd4fc9c5a61608a5dedf645c1295430a1623040f","modified":1718087003415},{"_id":"themes\\butterfly\\layout\\includes\\third-party\\card-post-count\\waline.pug","hash":"fd2320ee25507bb8ef49f932c2d170586b44ea4d","modified":1718087003415},{"_id":"themes\\butterfly\\layout\\includes\\third-party\\chat\\chatra.pug","hash":"08a85e52fc800d3562df869e5e2613313e76fce6","modified":1718087003416},{"_id":"themes\\butterfly\\layout\\includes\\third-party\\chat\\crisp.pug","hash":"09d2ab2570b67e6f09244a898ccab5567cb82ace","modified":1718087003416},{"_id":"themes\\butterfly\\layout\\includes\\third-party\\chat\\daovoice.pug","hash":"0d960849d5b05d27ec87627b983ca35f2411b9e8","modified":1718087003417},{"_id":"themes\\butterfly\\layout\\includes\\third-party\\chat\\messenger.pug","hash":"799da8f3015e6fe440681b21644bcb3810a5518c","modified":1718087003418},{"_id":"themes\\butterfly\\layout\\includes\\third-party\\chat\\index.pug","hash":"1157118db9f5d7c0c5a0fc7c346f6e934ca00d52","modified":1718087003418},{"_id":"themes\\butterfly\\layout\\includes\\third-party\\chat\\tidio.pug","hash":"6d40b521eec4136f6742c548a4445ed593470b1b","modified":1718087003419},{"_id":"themes\\butterfly\\layout\\includes\\third-party\\comments\\artalk.pug","hash":"5373b822aa72ddb96f2f1f4baf6c058b40d705d6","modified":1718087003419},{"_id":"themes\\butterfly\\layout\\includes\\third-party\\comments\\disqus.pug","hash":"364d1fd655baca9132038ef1e312abde2c0bc7de","modified":1718087003420},{"_id":"themes\\butterfly\\layout\\includes\\third-party\\comments\\disqusjs.pug","hash":"f78c9c20c86d58c7cf099f6f8d6097103d7d43e5","modified":1718087003420},{"_id":"themes\\butterfly\\layout\\includes\\third-party\\comments\\facebook_comments.pug","hash":"11f5dca1432e59f22955aaf4ac3e9de6b286d887","modified":1718087003421},{"_id":"themes\\butterfly\\layout\\includes\\third-party\\comments\\giscus.pug","hash":"1eab7ca1cb16c6786f9c3ca0efef8cc15e444ab4","modified":1718087003421},{"_id":"themes\\butterfly\\layout\\includes\\third-party\\comments\\gitalk.pug","hash":"1c86c8fc1a28514a02a1f6a25ca9ec05eb3955b7","modified":1718087003422},{"_id":"themes\\butterfly\\layout\\includes\\third-party\\comments\\index.pug","hash":"db6713d2b90eb8183f86ac92c26761a8501c0ddb","modified":1718087003423},{"_id":"themes\\butterfly\\layout\\includes\\third-party\\comments\\js.pug","hash":"3abbaaa4ea575c45b3cebffd40bad1acc6ffce84","modified":1718087003423},{"_id":"themes\\butterfly\\layout\\includes\\third-party\\comments\\livere.pug","hash":"09c2ef4bc6d005f96dfa48b1d9af1ec095c5266d","modified":1718087003423},{"_id":"themes\\butterfly\\layout\\includes\\third-party\\comments\\remark42.pug","hash":"7f450664e6323a076ae59c393b0f22167cfa82e5","modified":1718087003424},{"_id":"themes\\butterfly\\layout\\includes\\third-party\\comments\\twikoo.pug","hash":"9942a903227350960c1d0716e59516ae79ac24a8","modified":1718087003425},{"_id":"themes\\butterfly\\layout\\includes\\third-party\\comments\\utterances.pug","hash":"b65a42167df5fb07e2a63f312a58c321d3112a90","modified":1718087003425},{"_id":"themes\\butterfly\\layout\\includes\\third-party\\comments\\valine.pug","hash":"4ed7c74087e81c6fcaf4fca7dced58b4e19f4cb1","modified":1718087003426},{"_id":"themes\\butterfly\\layout\\includes\\third-party\\comments\\waline.pug","hash":"efb72547fc2d470a124f5636391128dc59627498","modified":1718087003426},{"_id":"themes\\butterfly\\layout\\includes\\third-party\\math\\index.pug","hash":"2afa4c21dd19890f47fb568cfb0d90efb676a253","modified":1718087003427},{"_id":"themes\\butterfly\\layout\\includes\\third-party\\math\\katex.pug","hash":"f0d3eddd2bed68e5517274b3530bfe0fa5057d8e","modified":1718087003428},{"_id":"themes\\butterfly\\layout\\includes\\third-party\\math\\mathjax.pug","hash":"bb944185f4bb9f9a9b9d70ee215f66ccd6d4c6cf","modified":1718087003428},{"_id":"themes\\butterfly\\layout\\includes\\third-party\\math\\mermaid.pug","hash":"c682e4d61017fb0dd2e837bfcc242371f1a13364","modified":1718087003429},{"_id":"themes\\butterfly\\layout\\includes\\third-party\\newest-comments\\artalk.pug","hash":"2e36fac4791e99844cd56676898be0dbf5eb4e99","modified":1718087003429},{"_id":"themes\\butterfly\\layout\\includes\\third-party\\newest-comments\\disqus-comment.pug","hash":"d8898e427acd91ceb97d6a7ee3acb011ca86b9fc","modified":1718087003430},{"_id":"themes\\butterfly\\layout\\includes\\third-party\\newest-comments\\github-issues.pug","hash":"fc8814bd016d039874ec2fc24dcb78587892e2a6","modified":1718087003430},{"_id":"themes\\butterfly\\layout\\includes\\third-party\\newest-comments\\index.pug","hash":"f8b65460c399973090c1fb7ab81e3708c252e7cc","modified":1718087003431},{"_id":"themes\\butterfly\\layout\\includes\\third-party\\newest-comments\\remark42.pug","hash":"a4e52188b6effeee1df2a01dcbf4105de76a61a8","modified":1718087003431},{"_id":"themes\\butterfly\\layout\\includes\\third-party\\newest-comments\\twikoo-comment.pug","hash":"17520a86de12ae585289463c066d3ac91b78a2ff","modified":1718087003432},{"_id":"themes\\butterfly\\layout\\includes\\third-party\\newest-comments\\valine.pug","hash":"ecfff55b2c7f6d87ce4d5028fdf9f8c0bf155c73","modified":1718087003433},{"_id":"themes\\butterfly\\layout\\includes\\third-party\\newest-comments\\waline.pug","hash":"0544d91c0bc9e26e0fe1b5ff490f4a8540ed1ee1","modified":1718087003433},{"_id":"themes\\butterfly\\layout\\includes\\third-party\\search\\algolia.pug","hash":"90338ac4cd114d324fe1caaaeea8be9ca05d6a46","modified":1718087003436},{"_id":"themes\\butterfly\\layout\\includes\\third-party\\search\\docsearch.pug","hash":"52a06a2e039f44383085333cac69f3f4e7d0ad3a","modified":1718087003437},{"_id":"themes\\butterfly\\layout\\includes\\third-party\\search\\index.pug","hash":"3adcf28a8d205ea3ee19828eda0e668702fac07a","modified":1718087003437},{"_id":"themes\\butterfly\\layout\\includes\\third-party\\search\\local-search.pug","hash":"420a86e73d0d748ac234fd00d06d9e433ca5e3f2","modified":1718087003437},{"_id":"themes\\butterfly\\layout\\includes\\third-party\\share\\addtoany.pug","hash":"1f02a26730e5f36cc2dfec7ff4d5c93a099ed5ba","modified":1718087003437},{"_id":"themes\\butterfly\\layout\\includes\\third-party\\share\\index.pug","hash":"c16ee69b5ca8db016db0508d014ae0867c4ce929","modified":1718087003438},{"_id":"themes\\butterfly\\layout\\includes\\third-party\\share\\share-js.pug","hash":"8106bd031586f075a994956ee4438eb13be25d7b","modified":1718087003439},{"_id":"themes\\butterfly\\source\\css\\_highlight\\highlight\\diff.styl","hash":"6e77f1ca0cfb0db6b028f5c0238780e66d344f3d","modified":1718087003469},{"_id":"themes\\butterfly\\source\\css\\_highlight\\highlight\\index.styl","hash":"fc702a4614d0562a381907b083f71ba63d301d86","modified":1718087003469},{"_id":"themes\\butterfly\\source\\css\\_highlight\\prismjs\\diff.styl","hash":"1309292f1c8c53d96cd7333507b106bcc24ca8fc","modified":1718087003471},{"_id":"themes\\butterfly\\source\\css\\_highlight\\prismjs\\index.styl","hash":"01ff9e77eb1bd454bec65a6ff5972c8e219bc708","modified":1718087003471},{"_id":"themes\\butterfly\\source\\css\\_highlight\\prismjs\\line-number.styl","hash":"7c9cc43e1d2577f7151039d58e603c30860fd281","modified":1718087003471},{"_id":"public/categories/index.html","hash":"2ed15d467c5482c0d7788e727c94e99ec15eba53","modified":1718343959026},{"_id":"public/tags/index.html","hash":"e8caadad556e02ad69e0477a57ffbc47a2b25a6f","modified":1718343959026},{"_id":"public/2024/06/14/面试题-redis-缓存击穿/index.html","hash":"a9730bd65fb2d8b531b57b3fd1e05c72f003d711","modified":1718343959026},{"_id":"public/2024/06/13/面试题_redis_缓存穿透/index.html","hash":"fe4f826e1efac2406292e6bf839c69cbb073f922","modified":1718343959026},{"_id":"public/archives/index.html","hash":"f1fdcaa4798062d7536961ba3bcf4e5e05518f95","modified":1718343959026},{"_id":"public/archives/2024/index.html","hash":"97c86b1fc53d8b52d0cdfcda4d3de9cb59c86ee7","modified":1718343959026},{"_id":"public/archives/2024/06/index.html","hash":"404a2baefad2d6f0163e631dc01c48f6850b5765","modified":1718343959026},{"_id":"public/index.html","hash":"2b34fbe3661d6092b9f53cc6f24da77ff82d171c","modified":1718343959026},{"_id":"public/categories/面试题/index.html","hash":"48dd606f58aa37fa40247a8d488dbfc28353673e","modified":1718343959026},{"_id":"public/categories/面试题/redis/index.html","hash":"d2ffb9780b93419d084a8ea4327ec23349d54e54","modified":1718343959026},{"_id":"public/tags/面试题/index.html","hash":"5965cae10ce1ae4da745e50a5327c156ba3c5133","modified":1718343959026},{"_id":"public/img/404.jpg","hash":"fb4489bc1d30c93d28f7332158c1c6c1416148de","modified":1718343959026},{"_id":"public/img/favicon.png","hash":"3cf89864b4f6c9b532522a4d260a2e887971c92d","modified":1718343959026},{"_id":"public/img/friend_404.gif","hash":"8d2d0ebef70a8eb07329f57e645889b0e420fa48","modified":1718343959026},{"_id":"public/js/utils.js","hash":"8e6b48d294e7aeaba8ff6348c43b2271cf865547","modified":1718343959026},{"_id":"public/css/var.css","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1718343959026},{"_id":"public/css/index.css","hash":"aec51d3ddd5cf94e4fe4771750edf500be15d523","modified":1718343959026},{"_id":"public/js/main.js","hash":"0dac585446445e0c419b86eec5580bc9b0657dc6","modified":1718343959026},{"_id":"public/js/tw_cn.js","hash":"f8d2e3f31468991a7f5171cbfdb157dfb86d3372","modified":1718343959026},{"_id":"public/js/search/algolia.js","hash":"108988d046da9a4716148df43b3975217c8ceaae","modified":1718343959026},{"_id":"public/js/search/local-search.js","hash":"e1f60ebac53a3f596fd0a4769b4f9275c48c6542","modified":1718343959026}],"Category":[{"name":"面试题","_id":"clxe9ml6r0004yguybn4q4pof"},{"name":"redis","parent":"clxe9ml6r0004yguybn4q4pof","_id":"clxe9ml6w0009yguy9boa3zfl"}],"Data":[],"Page":[{"title":"categories","date":"2024-06-13T09:50:14.000Z","_content":"","source":"categories/index.md","raw":"---\ntitle: categories\ndate: 2024-06-13 17:50:14\n---\n","updated":"2024-06-13T09:50:14.802Z","path":"categories/index.html","comments":1,"layout":"page","_id":"clxe9ml6f0000yguy75hf014t","content":"","cover":false,"excerpt":"","more":""},{"title":"tags","date":"2024-06-13T09:50:45.000Z","_content":"","source":"tags/index.md","raw":"---\ntitle: tags\ndate: 2024-06-13 17:50:45\n---\n","updated":"2024-06-13T09:50:45.289Z","path":"tags/index.html","comments":1,"layout":"page","_id":"clxe9ml6o0002yguy7yh8dar0","content":"","cover":false,"excerpt":"","more":""}],"Post":[{"title":"缓存击穿","date":"2024-06-14T05:40:00.000Z","_content":"\n# 缓存击穿\n\n**缓存击穿：** 给某一个 key 设置了过期时间，当 key 过期的时候，恰好这个时间点对这个 key 有大量的并发请求过来，这些并发的请求可能会瞬间把 DB 压垮\n\n![image.png](https://cdn.nlark.com/yuque/0/2023/png/40379251/1701511186393-d6044f58-1487-4a66-a061-c8992539c961.png#averageHue=%23efe7e6&clientId=u3069bed2-f2ac-4&from=paste&height=211&id=ua1a80a98&originHeight=317&originWidth=1450&originalType=binary&ratio=1.5&rotation=0&showTitle=false&size=151608&status=done&style=none&taskId=u933e6e76-82ce-4365-a08e-d0fdc435ed9&title=&width=966.6666666666666)\n\n- **解决方案一：** 互斥锁，强一致性，性能差\n- **解决方案二：** 逻辑过期，高可用，性能优，不能保证数据绝对一致\n\n![image.png](https://cdn.nlark.com/yuque/0/2023/png/40379251/1701511793717-85b08149-ce89-44ab-a413-8db909bf685f.png#averageHue=%23b58684&clientId=u3069bed2-f2ac-4&from=paste&height=67&id=FFsMF&originHeight=100&originWidth=899&originalType=binary&ratio=1.5&rotation=0&showTitle=false&size=42114&status=done&style=none&taskId=u834f0a82-8a07-4b15-9a7a-83cf7134fac&title=&width=599.3333333333334)\n![image.png](https://cdn.nlark.com/yuque/0/2023/png/40379251/1701511767737-552c275c-4d5e-494e-8c7e-749e054dc5cb.png#averageHue=%23ecebea&clientId=u3069bed2-f2ac-4&from=paste&height=501&id=ucae5ee31&originHeight=752&originWidth=1695&originalType=binary&ratio=1.5&rotation=0&showTitle=false&size=365954&status=done&style=none&taskId=u6d02727a-13c2-4357-9211-e832b19788d&title=&width=1130)\n\n## 面试场景\n\n> **面试官:** 什么是缓存击穿?怎么解决?  \n>\n> **候选人:**  \n> \n> 嗯!!  \n> 缓存击穿的意思是对于设置了过期时间的key，缓存在某个时间点过期的时候，恰好这时间点对这个Key有大量的并发请求过来，这些请求发现缓存过期一般都会从后端DB加载数据并回设到缓存，这个时候大并发的请求可能会瞬间把DB压垮。\n>   \n> 解决方案有两种方式:  \n> - 第一可以使用互斥锁:当缓存失效时，不立即去load db，先使用如Redis的 setnx去设置一个互斥锁，当操作成功返回时再进行load db的操作并回设缓存，否则重试get缓存的方法  \n> - 第二种方案可以设置当前key逻辑过期，大概是思路如下:  \n>   - 在设置key的时候，设置一个过期时间字段一块存入缓存中，不给当前key设置过期时间\n>   - 当查询的时候，从redis取出数据后判断时间是否过期\n>   - 如果过期则开通另外一个线程进行数据同步，当前线程正常返回数据，这个数据不是最新  \n> \n> 当然两种方案各有利弊:  \n> - 如果选择数据的强一致性，建议使用分布式锁的方案，性能上可能没那么高，锁需要等，也有可能产生死锁的问题\n> - 如果选择key的逻辑删除，则优先考虑的高可用性，性能比较高，但是数据同步这块做不到强一致。","source":"_posts/面试题-redis-缓存击穿.md","raw":"---\ntitle: 缓存击穿\ndate: 2024-06-14 13:40:00\ntags:\n    - 面试题\ncategories:\n    - 面试题\n    - redis\n---\n\n# 缓存击穿\n\n**缓存击穿：** 给某一个 key 设置了过期时间，当 key 过期的时候，恰好这个时间点对这个 key 有大量的并发请求过来，这些并发的请求可能会瞬间把 DB 压垮\n\n![image.png](https://cdn.nlark.com/yuque/0/2023/png/40379251/1701511186393-d6044f58-1487-4a66-a061-c8992539c961.png#averageHue=%23efe7e6&clientId=u3069bed2-f2ac-4&from=paste&height=211&id=ua1a80a98&originHeight=317&originWidth=1450&originalType=binary&ratio=1.5&rotation=0&showTitle=false&size=151608&status=done&style=none&taskId=u933e6e76-82ce-4365-a08e-d0fdc435ed9&title=&width=966.6666666666666)\n\n- **解决方案一：** 互斥锁，强一致性，性能差\n- **解决方案二：** 逻辑过期，高可用，性能优，不能保证数据绝对一致\n\n![image.png](https://cdn.nlark.com/yuque/0/2023/png/40379251/1701511793717-85b08149-ce89-44ab-a413-8db909bf685f.png#averageHue=%23b58684&clientId=u3069bed2-f2ac-4&from=paste&height=67&id=FFsMF&originHeight=100&originWidth=899&originalType=binary&ratio=1.5&rotation=0&showTitle=false&size=42114&status=done&style=none&taskId=u834f0a82-8a07-4b15-9a7a-83cf7134fac&title=&width=599.3333333333334)\n![image.png](https://cdn.nlark.com/yuque/0/2023/png/40379251/1701511767737-552c275c-4d5e-494e-8c7e-749e054dc5cb.png#averageHue=%23ecebea&clientId=u3069bed2-f2ac-4&from=paste&height=501&id=ucae5ee31&originHeight=752&originWidth=1695&originalType=binary&ratio=1.5&rotation=0&showTitle=false&size=365954&status=done&style=none&taskId=u6d02727a-13c2-4357-9211-e832b19788d&title=&width=1130)\n\n## 面试场景\n\n> **面试官:** 什么是缓存击穿?怎么解决?  \n>\n> **候选人:**  \n> \n> 嗯!!  \n> 缓存击穿的意思是对于设置了过期时间的key，缓存在某个时间点过期的时候，恰好这时间点对这个Key有大量的并发请求过来，这些请求发现缓存过期一般都会从后端DB加载数据并回设到缓存，这个时候大并发的请求可能会瞬间把DB压垮。\n>   \n> 解决方案有两种方式:  \n> - 第一可以使用互斥锁:当缓存失效时，不立即去load db，先使用如Redis的 setnx去设置一个互斥锁，当操作成功返回时再进行load db的操作并回设缓存，否则重试get缓存的方法  \n> - 第二种方案可以设置当前key逻辑过期，大概是思路如下:  \n>   - 在设置key的时候，设置一个过期时间字段一块存入缓存中，不给当前key设置过期时间\n>   - 当查询的时候，从redis取出数据后判断时间是否过期\n>   - 如果过期则开通另外一个线程进行数据同步，当前线程正常返回数据，这个数据不是最新  \n> \n> 当然两种方案各有利弊:  \n> - 如果选择数据的强一致性，建议使用分布式锁的方案，性能上可能没那么高，锁需要等，也有可能产生死锁的问题\n> - 如果选择key的逻辑删除，则优先考虑的高可用性，性能比较高，但是数据同步这块做不到强一致。","slug":"面试题-redis-缓存击穿","published":1,"updated":"2024-06-14T05:45:48.071Z","comments":1,"layout":"post","photos":[],"_id":"clxe9ml6j0001yguy9jdafo5a","content":"<h1 id=\"缓存击穿\"><a href=\"#缓存击穿\" class=\"headerlink\" title=\"缓存击穿\"></a>缓存击穿</h1><p><strong>缓存击穿：</strong> 给某一个 key 设置了过期时间，当 key 过期的时候，恰好这个时间点对这个 key 有大量的并发请求过来，这些并发的请求可能会瞬间把 DB 压垮</p>\n<p><img src=\"https://cdn.nlark.com/yuque/0/2023/png/40379251/1701511186393-d6044f58-1487-4a66-a061-c8992539c961.png#averageHue=%23efe7e6&clientId=u3069bed2-f2ac-4&from=paste&height=211&id=ua1a80a98&originHeight=317&originWidth=1450&originalType=binary&ratio=1.5&rotation=0&showTitle=false&size=151608&status=done&style=none&taskId=u933e6e76-82ce-4365-a08e-d0fdc435ed9&title=&width=966.6666666666666\" alt=\"image.png\"></p>\n<ul>\n<li><strong>解决方案一：</strong> 互斥锁，强一致性，性能差</li>\n<li><strong>解决方案二：</strong> 逻辑过期，高可用，性能优，不能保证数据绝对一致</li>\n</ul>\n<p><img src=\"https://cdn.nlark.com/yuque/0/2023/png/40379251/1701511793717-85b08149-ce89-44ab-a413-8db909bf685f.png#averageHue=%23b58684&clientId=u3069bed2-f2ac-4&from=paste&height=67&id=FFsMF&originHeight=100&originWidth=899&originalType=binary&ratio=1.5&rotation=0&showTitle=false&size=42114&status=done&style=none&taskId=u834f0a82-8a07-4b15-9a7a-83cf7134fac&title=&width=599.3333333333334\" alt=\"image.png\"><br><img src=\"https://cdn.nlark.com/yuque/0/2023/png/40379251/1701511767737-552c275c-4d5e-494e-8c7e-749e054dc5cb.png#averageHue=%23ecebea&clientId=u3069bed2-f2ac-4&from=paste&height=501&id=ucae5ee31&originHeight=752&originWidth=1695&originalType=binary&ratio=1.5&rotation=0&showTitle=false&size=365954&status=done&style=none&taskId=u6d02727a-13c2-4357-9211-e832b19788d&title=&width=1130\" alt=\"image.png\"></p>\n<h2 id=\"面试场景\"><a href=\"#面试场景\" class=\"headerlink\" title=\"面试场景\"></a>面试场景</h2><blockquote>\n<p><strong>面试官:</strong> 什么是缓存击穿?怎么解决?  </p>\n<p><strong>候选人:</strong>  </p>\n<p>嗯!!<br>缓存击穿的意思是对于设置了过期时间的key，缓存在某个时间点过期的时候，恰好这时间点对这个Key有大量的并发请求过来，这些请求发现缓存过期一般都会从后端DB加载数据并回设到缓存，这个时候大并发的请求可能会瞬间把DB压垮。</p>\n<p>解决方案有两种方式:  </p>\n<ul>\n<li>第一可以使用互斥锁:当缓存失效时，不立即去load db，先使用如Redis的 setnx去设置一个互斥锁，当操作成功返回时再进行load db的操作并回设缓存，否则重试get缓存的方法  </li>\n<li>第二种方案可以设置当前key逻辑过期，大概是思路如下:  <ul>\n<li>在设置key的时候，设置一个过期时间字段一块存入缓存中，不给当前key设置过期时间</li>\n<li>当查询的时候，从redis取出数据后判断时间是否过期</li>\n<li>如果过期则开通另外一个线程进行数据同步，当前线程正常返回数据，这个数据不是最新</li>\n</ul>\n</li>\n</ul>\n<p>当然两种方案各有利弊:  </p>\n<ul>\n<li>如果选择数据的强一致性，建议使用分布式锁的方案，性能上可能没那么高，锁需要等，也有可能产生死锁的问题</li>\n<li>如果选择key的逻辑删除，则优先考虑的高可用性，性能比较高，但是数据同步这块做不到强一致。</li>\n</ul>\n</blockquote>\n","cover":false,"excerpt":"","more":"<h1 id=\"缓存击穿\"><a href=\"#缓存击穿\" class=\"headerlink\" title=\"缓存击穿\"></a>缓存击穿</h1><p><strong>缓存击穿：</strong> 给某一个 key 设置了过期时间，当 key 过期的时候，恰好这个时间点对这个 key 有大量的并发请求过来，这些并发的请求可能会瞬间把 DB 压垮</p>\n<p><img src=\"https://cdn.nlark.com/yuque/0/2023/png/40379251/1701511186393-d6044f58-1487-4a66-a061-c8992539c961.png#averageHue=%23efe7e6&clientId=u3069bed2-f2ac-4&from=paste&height=211&id=ua1a80a98&originHeight=317&originWidth=1450&originalType=binary&ratio=1.5&rotation=0&showTitle=false&size=151608&status=done&style=none&taskId=u933e6e76-82ce-4365-a08e-d0fdc435ed9&title=&width=966.6666666666666\" alt=\"image.png\"></p>\n<ul>\n<li><strong>解决方案一：</strong> 互斥锁，强一致性，性能差</li>\n<li><strong>解决方案二：</strong> 逻辑过期，高可用，性能优，不能保证数据绝对一致</li>\n</ul>\n<p><img src=\"https://cdn.nlark.com/yuque/0/2023/png/40379251/1701511793717-85b08149-ce89-44ab-a413-8db909bf685f.png#averageHue=%23b58684&clientId=u3069bed2-f2ac-4&from=paste&height=67&id=FFsMF&originHeight=100&originWidth=899&originalType=binary&ratio=1.5&rotation=0&showTitle=false&size=42114&status=done&style=none&taskId=u834f0a82-8a07-4b15-9a7a-83cf7134fac&title=&width=599.3333333333334\" alt=\"image.png\"><br><img src=\"https://cdn.nlark.com/yuque/0/2023/png/40379251/1701511767737-552c275c-4d5e-494e-8c7e-749e054dc5cb.png#averageHue=%23ecebea&clientId=u3069bed2-f2ac-4&from=paste&height=501&id=ucae5ee31&originHeight=752&originWidth=1695&originalType=binary&ratio=1.5&rotation=0&showTitle=false&size=365954&status=done&style=none&taskId=u6d02727a-13c2-4357-9211-e832b19788d&title=&width=1130\" alt=\"image.png\"></p>\n<h2 id=\"面试场景\"><a href=\"#面试场景\" class=\"headerlink\" title=\"面试场景\"></a>面试场景</h2><blockquote>\n<p><strong>面试官:</strong> 什么是缓存击穿?怎么解决?  </p>\n<p><strong>候选人:</strong>  </p>\n<p>嗯!!<br>缓存击穿的意思是对于设置了过期时间的key，缓存在某个时间点过期的时候，恰好这时间点对这个Key有大量的并发请求过来，这些请求发现缓存过期一般都会从后端DB加载数据并回设到缓存，这个时候大并发的请求可能会瞬间把DB压垮。</p>\n<p>解决方案有两种方式:  </p>\n<ul>\n<li>第一可以使用互斥锁:当缓存失效时，不立即去load db，先使用如Redis的 setnx去设置一个互斥锁，当操作成功返回时再进行load db的操作并回设缓存，否则重试get缓存的方法  </li>\n<li>第二种方案可以设置当前key逻辑过期，大概是思路如下:  <ul>\n<li>在设置key的时候，设置一个过期时间字段一块存入缓存中，不给当前key设置过期时间</li>\n<li>当查询的时候，从redis取出数据后判断时间是否过期</li>\n<li>如果过期则开通另外一个线程进行数据同步，当前线程正常返回数据，这个数据不是最新</li>\n</ul>\n</li>\n</ul>\n<p>当然两种方案各有利弊:  </p>\n<ul>\n<li>如果选择数据的强一致性，建议使用分布式锁的方案，性能上可能没那么高，锁需要等，也有可能产生死锁的问题</li>\n<li>如果选择key的逻辑删除，则优先考虑的高可用性，性能比较高，但是数据同步这块做不到强一致。</li>\n</ul>\n</blockquote>\n"},{"title":"缓存穿透","date":"2024-06-13T09:58:55.000Z","_content":"\n>例：\n>一个 get 请求：api/news/getById/1\n\n![image.png](https://cdn.nlark.com/yuque/0/2023/png/40379251/1701495343165-a0018281-afc3-44ae-8f20-37d7cbcfa194.png#averageHue=%23fafaf9&clientId=u952a7e35-ccfe-4&from=paste&height=164&id=u08060d4f&originHeight=246&originWidth=1232&originalType=binary&ratio=1.5&rotation=0&showTitle=false&size=103875&status=done&style=none&taskId=uaf86987e-0833-499b-a4d2-4e434117183&title=&width=821.3333333333334)\n\n**缓存穿透：** 查询一个**不存在**的数据，mysql 查询不到数据也不会直接写入缓存，就会导致每次请求都查数据库\n\n**解决方案一：** 缓存空数据，查询返回的数据为空，仍把这个空结果进行缓存。\n**优点：** 简单\n**缺点：** 消耗内存，可能会发生不一致的问题\n\n**解决方案二：** 布隆过滤器\n\n![image.png](https://cdn.nlark.com/yuque/0/2023/png/40379251/1701504427479-16450ce3-e05a-4bae-a9a7-b3e74eb74c6a.png#averageHue=%23f5f3f1&clientId=u4cedfadc-8591-4&from=paste&height=209&id=u9661d065&originHeight=313&originWidth=1570&originalType=binary&ratio=1.5&rotation=0&showTitle=false&size=158331&status=done&style=none&taskId=u329eca33-6888-4c14-8fab-4595efcdb33&title=&width=1046.6666666666667)\n\n**优点：** 内存占用较少，没有多余 key\n**缺点：** 实现复杂，存在误判\n\n## 布隆过滤器\n**bitmap（位图）：** 相当于是一个以（bit）位为单位的数组，数组中每个元素智能存储二进制数 0 或 1\n**布隆过滤器作用：** 布隆过滤器可以用于检索一个元素是否在一个集合中。\n\n![image.png](https://cdn.nlark.com/yuque/0/2023/png/40379251/1701504639809-cb4cf6b3-7c37-43a3-808c-cd50d504c6c2.png#averageHue=%23e7e5e3&clientId=u4cedfadc-8591-4&from=paste&height=240&id=u466d40c6&originHeight=360&originWidth=1397&originalType=binary&ratio=1.5&rotation=0&showTitle=false&size=125768&status=done&style=none&taskId=u94985e7c-a243-4a48-921d-bebb6ceffab&title=&width=931.3333333333334)\n\n但是可能出现误判现象，如下所示：\n\n![image.png](https://cdn.nlark.com/yuque/0/2023/png/40379251/1701504823538-0e7c6556-5696-44d2-a360-fd34408f94a5.png#averageHue=%23f3ebe9&clientId=u4cedfadc-8591-4&from=paste&height=405&id=u8325e47f&originHeight=607&originWidth=1343&originalType=binary&ratio=1.5&rotation=0&showTitle=false&size=158816&status=done&style=none&taskId=udebd0c02-7c35-45cd-b7e9-e568224af4f&title=&width=895.3333333333334)\n\n如何解决这个现象呢？我们可以降低误判率来减少误判的可能性。\n**误判率：** 数组越小误判率就越大，数组越大误判率就越小，但是同时带来了更多的内存消耗。\n\n\n## 面试场景\n> **面试官:** 什么是缓存穿透?怎么解决?  \n> **候选人:**  \n> 嗯~~，我想一下  \n> 缓存穿透是指查询一个一定不存在的数据，如果从存储层查不到数据则不写入缓存，这将导致这个不存在的数据每次请求都要到DB去查询，可能导致DB挂掉。这种情况大概率是遭到了攻击。  \n>解决方案的话，我们通常都会用布隆过滤器来解决它\n\n> **面试官:** 好的，你能介绍一下布隆过滤器吗?  \n> **候选人:**  \n> 嗯，是这样~  \n> 布隆过滤器主要是用于检索一个元素是否在一个集合中。我们当时使用的是redisson实现的布隆过滤器。  \n> 它的底层主要是先去初始化一个比较大数组，里面存放的二进制0或1。在一开始都是o，当一个key来了之后经过3次hash计算，模于数组长度找到数据的下标然后把数组中原来的o改为1，这样的话，三个数组的位置就能标明一个key的存在。查找的过程也是一样的。  \n> 当然是有缺点的，布隆过滤器有可能会产生一定的误判，我们一般可以设置这个误判率，大概不会超过5%，其实这个误判是必然存在的，要不就得增加数组的长度，其实已经算是很划分了，5%以内的误判率一般的项目也能接受，不至于高并发下压倒数据库。","source":"_posts/面试题_redis_缓存穿透.md","raw":"---\ntitle: 缓存穿透\ndate: 2024-06-13 17:58:55\ntags:\n    - 面试题\ncategories:\n    - 面试题\n    - redis\n---\n\n>例：\n>一个 get 请求：api/news/getById/1\n\n![image.png](https://cdn.nlark.com/yuque/0/2023/png/40379251/1701495343165-a0018281-afc3-44ae-8f20-37d7cbcfa194.png#averageHue=%23fafaf9&clientId=u952a7e35-ccfe-4&from=paste&height=164&id=u08060d4f&originHeight=246&originWidth=1232&originalType=binary&ratio=1.5&rotation=0&showTitle=false&size=103875&status=done&style=none&taskId=uaf86987e-0833-499b-a4d2-4e434117183&title=&width=821.3333333333334)\n\n**缓存穿透：** 查询一个**不存在**的数据，mysql 查询不到数据也不会直接写入缓存，就会导致每次请求都查数据库\n\n**解决方案一：** 缓存空数据，查询返回的数据为空，仍把这个空结果进行缓存。\n**优点：** 简单\n**缺点：** 消耗内存，可能会发生不一致的问题\n\n**解决方案二：** 布隆过滤器\n\n![image.png](https://cdn.nlark.com/yuque/0/2023/png/40379251/1701504427479-16450ce3-e05a-4bae-a9a7-b3e74eb74c6a.png#averageHue=%23f5f3f1&clientId=u4cedfadc-8591-4&from=paste&height=209&id=u9661d065&originHeight=313&originWidth=1570&originalType=binary&ratio=1.5&rotation=0&showTitle=false&size=158331&status=done&style=none&taskId=u329eca33-6888-4c14-8fab-4595efcdb33&title=&width=1046.6666666666667)\n\n**优点：** 内存占用较少，没有多余 key\n**缺点：** 实现复杂，存在误判\n\n## 布隆过滤器\n**bitmap（位图）：** 相当于是一个以（bit）位为单位的数组，数组中每个元素智能存储二进制数 0 或 1\n**布隆过滤器作用：** 布隆过滤器可以用于检索一个元素是否在一个集合中。\n\n![image.png](https://cdn.nlark.com/yuque/0/2023/png/40379251/1701504639809-cb4cf6b3-7c37-43a3-808c-cd50d504c6c2.png#averageHue=%23e7e5e3&clientId=u4cedfadc-8591-4&from=paste&height=240&id=u466d40c6&originHeight=360&originWidth=1397&originalType=binary&ratio=1.5&rotation=0&showTitle=false&size=125768&status=done&style=none&taskId=u94985e7c-a243-4a48-921d-bebb6ceffab&title=&width=931.3333333333334)\n\n但是可能出现误判现象，如下所示：\n\n![image.png](https://cdn.nlark.com/yuque/0/2023/png/40379251/1701504823538-0e7c6556-5696-44d2-a360-fd34408f94a5.png#averageHue=%23f3ebe9&clientId=u4cedfadc-8591-4&from=paste&height=405&id=u8325e47f&originHeight=607&originWidth=1343&originalType=binary&ratio=1.5&rotation=0&showTitle=false&size=158816&status=done&style=none&taskId=udebd0c02-7c35-45cd-b7e9-e568224af4f&title=&width=895.3333333333334)\n\n如何解决这个现象呢？我们可以降低误判率来减少误判的可能性。\n**误判率：** 数组越小误判率就越大，数组越大误判率就越小，但是同时带来了更多的内存消耗。\n\n\n## 面试场景\n> **面试官:** 什么是缓存穿透?怎么解决?  \n> **候选人:**  \n> 嗯~~，我想一下  \n> 缓存穿透是指查询一个一定不存在的数据，如果从存储层查不到数据则不写入缓存，这将导致这个不存在的数据每次请求都要到DB去查询，可能导致DB挂掉。这种情况大概率是遭到了攻击。  \n>解决方案的话，我们通常都会用布隆过滤器来解决它\n\n> **面试官:** 好的，你能介绍一下布隆过滤器吗?  \n> **候选人:**  \n> 嗯，是这样~  \n> 布隆过滤器主要是用于检索一个元素是否在一个集合中。我们当时使用的是redisson实现的布隆过滤器。  \n> 它的底层主要是先去初始化一个比较大数组，里面存放的二进制0或1。在一开始都是o，当一个key来了之后经过3次hash计算，模于数组长度找到数据的下标然后把数组中原来的o改为1，这样的话，三个数组的位置就能标明一个key的存在。查找的过程也是一样的。  \n> 当然是有缺点的，布隆过滤器有可能会产生一定的误判，我们一般可以设置这个误判率，大概不会超过5%，其实这个误判是必然存在的，要不就得增加数组的长度，其实已经算是很划分了，5%以内的误判率一般的项目也能接受，不至于高并发下压倒数据库。","slug":"面试题_redis_缓存穿透","published":1,"updated":"2024-06-14T05:38:39.250Z","comments":1,"layout":"post","photos":[],"_id":"clxe9ml6p0003yguydsca8aqn","content":"<blockquote>\n<p>例：<br>一个 get 请求：api&#x2F;news&#x2F;getById&#x2F;1</p>\n</blockquote>\n<p><img src=\"https://cdn.nlark.com/yuque/0/2023/png/40379251/1701495343165-a0018281-afc3-44ae-8f20-37d7cbcfa194.png#averageHue=%23fafaf9&clientId=u952a7e35-ccfe-4&from=paste&height=164&id=u08060d4f&originHeight=246&originWidth=1232&originalType=binary&ratio=1.5&rotation=0&showTitle=false&size=103875&status=done&style=none&taskId=uaf86987e-0833-499b-a4d2-4e434117183&title=&width=821.3333333333334\" alt=\"image.png\"></p>\n<p><strong>缓存穿透：</strong> 查询一个<strong>不存在</strong>的数据，mysql 查询不到数据也不会直接写入缓存，就会导致每次请求都查数据库</p>\n<p><strong>解决方案一：</strong> 缓存空数据，查询返回的数据为空，仍把这个空结果进行缓存。<br><strong>优点：</strong> 简单<br><strong>缺点：</strong> 消耗内存，可能会发生不一致的问题</p>\n<p><strong>解决方案二：</strong> 布隆过滤器</p>\n<p><img src=\"https://cdn.nlark.com/yuque/0/2023/png/40379251/1701504427479-16450ce3-e05a-4bae-a9a7-b3e74eb74c6a.png#averageHue=%23f5f3f1&clientId=u4cedfadc-8591-4&from=paste&height=209&id=u9661d065&originHeight=313&originWidth=1570&originalType=binary&ratio=1.5&rotation=0&showTitle=false&size=158331&status=done&style=none&taskId=u329eca33-6888-4c14-8fab-4595efcdb33&title=&width=1046.6666666666667\" alt=\"image.png\"></p>\n<p><strong>优点：</strong> 内存占用较少，没有多余 key<br><strong>缺点：</strong> 实现复杂，存在误判</p>\n<h2 id=\"布隆过滤器\"><a href=\"#布隆过滤器\" class=\"headerlink\" title=\"布隆过滤器\"></a>布隆过滤器</h2><p><strong>bitmap（位图）：</strong> 相当于是一个以（bit）位为单位的数组，数组中每个元素智能存储二进制数 0 或 1<br><strong>布隆过滤器作用：</strong> 布隆过滤器可以用于检索一个元素是否在一个集合中。</p>\n<p><img src=\"https://cdn.nlark.com/yuque/0/2023/png/40379251/1701504639809-cb4cf6b3-7c37-43a3-808c-cd50d504c6c2.png#averageHue=%23e7e5e3&clientId=u4cedfadc-8591-4&from=paste&height=240&id=u466d40c6&originHeight=360&originWidth=1397&originalType=binary&ratio=1.5&rotation=0&showTitle=false&size=125768&status=done&style=none&taskId=u94985e7c-a243-4a48-921d-bebb6ceffab&title=&width=931.3333333333334\" alt=\"image.png\"></p>\n<p>但是可能出现误判现象，如下所示：</p>\n<p><img src=\"https://cdn.nlark.com/yuque/0/2023/png/40379251/1701504823538-0e7c6556-5696-44d2-a360-fd34408f94a5.png#averageHue=%23f3ebe9&clientId=u4cedfadc-8591-4&from=paste&height=405&id=u8325e47f&originHeight=607&originWidth=1343&originalType=binary&ratio=1.5&rotation=0&showTitle=false&size=158816&status=done&style=none&taskId=udebd0c02-7c35-45cd-b7e9-e568224af4f&title=&width=895.3333333333334\" alt=\"image.png\"></p>\n<p>如何解决这个现象呢？我们可以降低误判率来减少误判的可能性。<br><strong>误判率：</strong> 数组越小误判率就越大，数组越大误判率就越小，但是同时带来了更多的内存消耗。</p>\n<h2 id=\"面试场景\"><a href=\"#面试场景\" class=\"headerlink\" title=\"面试场景\"></a>面试场景</h2><blockquote>\n<p><strong>面试官:</strong> 什么是缓存穿透?怎么解决?<br><strong>候选人:</strong><br>嗯~~，我想一下<br>缓存穿透是指查询一个一定不存在的数据，如果从存储层查不到数据则不写入缓存，这将导致这个不存在的数据每次请求都要到DB去查询，可能导致DB挂掉。这种情况大概率是遭到了攻击。<br>解决方案的话，我们通常都会用布隆过滤器来解决它</p>\n</blockquote>\n<blockquote>\n<p><strong>面试官:</strong> 好的，你能介绍一下布隆过滤器吗?<br><strong>候选人:</strong><br>嗯，是这样~<br>布隆过滤器主要是用于检索一个元素是否在一个集合中。我们当时使用的是redisson实现的布隆过滤器。<br>它的底层主要是先去初始化一个比较大数组，里面存放的二进制0或1。在一开始都是o，当一个key来了之后经过3次hash计算，模于数组长度找到数据的下标然后把数组中原来的o改为1，这样的话，三个数组的位置就能标明一个key的存在。查找的过程也是一样的。<br>当然是有缺点的，布隆过滤器有可能会产生一定的误判，我们一般可以设置这个误判率，大概不会超过5%，其实这个误判是必然存在的，要不就得增加数组的长度，其实已经算是很划分了，5%以内的误判率一般的项目也能接受，不至于高并发下压倒数据库。</p>\n</blockquote>\n","cover":false,"excerpt":"","more":"<blockquote>\n<p>例：<br>一个 get 请求：api&#x2F;news&#x2F;getById&#x2F;1</p>\n</blockquote>\n<p><img src=\"https://cdn.nlark.com/yuque/0/2023/png/40379251/1701495343165-a0018281-afc3-44ae-8f20-37d7cbcfa194.png#averageHue=%23fafaf9&clientId=u952a7e35-ccfe-4&from=paste&height=164&id=u08060d4f&originHeight=246&originWidth=1232&originalType=binary&ratio=1.5&rotation=0&showTitle=false&size=103875&status=done&style=none&taskId=uaf86987e-0833-499b-a4d2-4e434117183&title=&width=821.3333333333334\" alt=\"image.png\"></p>\n<p><strong>缓存穿透：</strong> 查询一个<strong>不存在</strong>的数据，mysql 查询不到数据也不会直接写入缓存，就会导致每次请求都查数据库</p>\n<p><strong>解决方案一：</strong> 缓存空数据，查询返回的数据为空，仍把这个空结果进行缓存。<br><strong>优点：</strong> 简单<br><strong>缺点：</strong> 消耗内存，可能会发生不一致的问题</p>\n<p><strong>解决方案二：</strong> 布隆过滤器</p>\n<p><img src=\"https://cdn.nlark.com/yuque/0/2023/png/40379251/1701504427479-16450ce3-e05a-4bae-a9a7-b3e74eb74c6a.png#averageHue=%23f5f3f1&clientId=u4cedfadc-8591-4&from=paste&height=209&id=u9661d065&originHeight=313&originWidth=1570&originalType=binary&ratio=1.5&rotation=0&showTitle=false&size=158331&status=done&style=none&taskId=u329eca33-6888-4c14-8fab-4595efcdb33&title=&width=1046.6666666666667\" alt=\"image.png\"></p>\n<p><strong>优点：</strong> 内存占用较少，没有多余 key<br><strong>缺点：</strong> 实现复杂，存在误判</p>\n<h2 id=\"布隆过滤器\"><a href=\"#布隆过滤器\" class=\"headerlink\" title=\"布隆过滤器\"></a>布隆过滤器</h2><p><strong>bitmap（位图）：</strong> 相当于是一个以（bit）位为单位的数组，数组中每个元素智能存储二进制数 0 或 1<br><strong>布隆过滤器作用：</strong> 布隆过滤器可以用于检索一个元素是否在一个集合中。</p>\n<p><img src=\"https://cdn.nlark.com/yuque/0/2023/png/40379251/1701504639809-cb4cf6b3-7c37-43a3-808c-cd50d504c6c2.png#averageHue=%23e7e5e3&clientId=u4cedfadc-8591-4&from=paste&height=240&id=u466d40c6&originHeight=360&originWidth=1397&originalType=binary&ratio=1.5&rotation=0&showTitle=false&size=125768&status=done&style=none&taskId=u94985e7c-a243-4a48-921d-bebb6ceffab&title=&width=931.3333333333334\" alt=\"image.png\"></p>\n<p>但是可能出现误判现象，如下所示：</p>\n<p><img src=\"https://cdn.nlark.com/yuque/0/2023/png/40379251/1701504823538-0e7c6556-5696-44d2-a360-fd34408f94a5.png#averageHue=%23f3ebe9&clientId=u4cedfadc-8591-4&from=paste&height=405&id=u8325e47f&originHeight=607&originWidth=1343&originalType=binary&ratio=1.5&rotation=0&showTitle=false&size=158816&status=done&style=none&taskId=udebd0c02-7c35-45cd-b7e9-e568224af4f&title=&width=895.3333333333334\" alt=\"image.png\"></p>\n<p>如何解决这个现象呢？我们可以降低误判率来减少误判的可能性。<br><strong>误判率：</strong> 数组越小误判率就越大，数组越大误判率就越小，但是同时带来了更多的内存消耗。</p>\n<h2 id=\"面试场景\"><a href=\"#面试场景\" class=\"headerlink\" title=\"面试场景\"></a>面试场景</h2><blockquote>\n<p><strong>面试官:</strong> 什么是缓存穿透?怎么解决?<br><strong>候选人:</strong><br>嗯~~，我想一下<br>缓存穿透是指查询一个一定不存在的数据，如果从存储层查不到数据则不写入缓存，这将导致这个不存在的数据每次请求都要到DB去查询，可能导致DB挂掉。这种情况大概率是遭到了攻击。<br>解决方案的话，我们通常都会用布隆过滤器来解决它</p>\n</blockquote>\n<blockquote>\n<p><strong>面试官:</strong> 好的，你能介绍一下布隆过滤器吗?<br><strong>候选人:</strong><br>嗯，是这样~<br>布隆过滤器主要是用于检索一个元素是否在一个集合中。我们当时使用的是redisson实现的布隆过滤器。<br>它的底层主要是先去初始化一个比较大数组，里面存放的二进制0或1。在一开始都是o，当一个key来了之后经过3次hash计算，模于数组长度找到数据的下标然后把数组中原来的o改为1，这样的话，三个数组的位置就能标明一个key的存在。查找的过程也是一样的。<br>当然是有缺点的，布隆过滤器有可能会产生一定的误判，我们一般可以设置这个误判率，大概不会超过5%，其实这个误判是必然存在的，要不就得增加数组的长度，其实已经算是很划分了，5%以内的误判率一般的项目也能接受，不至于高并发下压倒数据库。</p>\n</blockquote>\n"}],"PostAsset":[],"PostCategory":[{"post_id":"clxe9ml6j0001yguy9jdafo5a","category_id":"clxe9ml6r0004yguybn4q4pof","_id":"clxe9ml6y000cyguyf2zeg4tb"},{"post_id":"clxe9ml6j0001yguy9jdafo5a","category_id":"clxe9ml6w0009yguy9boa3zfl","_id":"clxe9ml6y000dyguy7wp43kj9"},{"post_id":"clxe9ml6p0003yguydsca8aqn","category_id":"clxe9ml6r0004yguybn4q4pof","_id":"clxe9ml6y000eyguy24bz05xu"},{"post_id":"clxe9ml6p0003yguydsca8aqn","category_id":"clxe9ml6w0009yguy9boa3zfl","_id":"clxe9ml6y000fyguy862o0y8h"}],"PostTag":[{"post_id":"clxe9ml6j0001yguy9jdafo5a","tag_id":"clxe9ml6t0005yguy3cdb13bg","_id":"clxe9ml6w0008yguyg7re8wiz"},{"post_id":"clxe9ml6p0003yguydsca8aqn","tag_id":"clxe9ml6t0005yguy3cdb13bg","_id":"clxe9ml6x000ayguy2xe16y1v"}],"Tag":[{"name":"面试题","_id":"clxe9ml6t0005yguy3cdb13bg"}]}}